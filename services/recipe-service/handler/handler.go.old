// package handler
// 
// import (
// 	"encoding/json"
// 	"fmt"
// 	"io/ioutil"
// 	"net/http"
// 
// 	"github.com/gorilla/mux"
// 	"github.com/jinzhu/gorm"
// )
// 
// var dbConnection *gorm.DB
// 
// type recipe struct {
// 	Name         string `json:"name"`
// 	Yield        string `json:"yield"`
// 	ActiveTime   string `json:"activeTime"`
// 	TotalTime    string `json:"totalTime"`
// 	Ingredients  string `json:"ingredients"`
// 	Instructions string `json:"instructions"`
// 	ID           string `json:"id"`
// }
// 
// type allRecipies []recipe
// 
// var recipies = allRecipies{
// 	{
// 		Name:         "daD",
// 		Yield:        "ASD",
// 		ActiveTime:   "ASD",
// 		TotalTime:    "ASD",
// 		Ingredients:  "ASD",
// 		Instructions: "AD",
// 		ID:           "2",
// 	},
// }
// 
// func SetDBconnection(dbCon *gorm.DB) {
// 	dbConnection = dbCon
// }
// 
// func HomeLink(w http.ResponseWriter, r *http.Request) {
// 	fmt.Fprintf(w, "Welcome home!")
// }
// 
// func CreateRecipe(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 
// 	var newRecipe recipe
// 	reqBody, err := ioutil.ReadAll(r.Body)
// 	if err != nil {
// 		fmt.Fprintf(w, "Kindly enter data with the recipe title and description only in order to update")
// 	}
// 
// 	json.Unmarshal(reqBody, &newRecipe)
// 
// 	dbConnection.Create(&newRecipe)
// 
// 	w.WriteHeader(http.StatusCreated)
// 
// 	json.NewEncoder(w).Encode(newRecipe)
// }
// 
// func GetOneRecipe(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 
// 	recipeID := mux.Vars(r)["id"]
// 
// 	dbConnection.Find(&model.Recipe, recipeID)
// 
// 	for _, singleRecipe := range recipies {
// 		if singleRecipe.ID == recipeID {
// 			json.NewEncoder(w).Encode(singleRecipe)
// 		}
// 	}
// }
// 
// func GetAllRecipies(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 
// 	json.NewEncoder(w).Encode(recipies)
// }
// 
// func UpdateRecipe(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 
// 	recipeID := mux.Vars(r)["id"]
// 	var updatedRecipe recipe
// 
// 	reqBody, err := ioutil.ReadAll(r.Body)
// 	if err != nil {
// 		fmt.Fprintf(w, "Kindly enter data with the recipe title and description only in order to update")
// 	}
// 	json.Unmarshal(reqBody, &updatedRecipe)
// 
// 	for i, singleRecipe := range recipies {
// 		if singleRecipe.ID == recipeID {
// 			singleRecipe.Name = updatedRecipe.Name
// 			singleRecipe.Yield = updatedRecipe.Yield
// 			singleRecipe.ActiveTime = updatedRecipe.ActiveTime
// 			singleRecipe.TotalTime = updatedRecipe.TotalTime
// 			singleRecipe.Ingredients = updatedRecipe.Ingredients
// 			singleRecipe.Instructions = updatedRecipe.Instructions
// 
// 			recipies = append(recipies[:i], singleRecipe)
// 			json.NewEncoder(w).Encode(singleRecipe)
// 		}
// 	}
// }
// 
// func DeleteRecipe(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 
// 	recipeID := mux.Vars(r)["id"]
// 
// 	for i, singleRecipe := range recipies {
// 		if singleRecipe.ID == recipeID {
// 			recipies = append(recipies[:i], recipies[i+1:]...)
// 			fmt.Fprintf(w, "The recipe with ID %v has been deleted successfully", recipeID)
// 		}
// 	}
// }
